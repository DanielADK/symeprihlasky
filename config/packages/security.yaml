security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory: { memory: null }
        users:
            entity:
                class: 'App\Entity\Person'
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            provider: users
            entry_point: App\Security\AuthenticationEntryPoint
            form_login:
                login_path: login
                check_path: login
                default_target_path: admin_home
                enable_csrf: true
            logout:
                path: logout
            remember_me:
                secret: "%kernel.secret%"
                lifetime: 604800 # One week

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Role hierarchy
    # {VIEW,ADD,EDIT,DELETE}_{PERSON,PARENT,CHILD,EVENT,APPLICATION}
    # {VIEW,ADD,EDIT,DELETE}_OWN_{PERSON,CHILD,APPLICATION}
    role_hierarchy:
        ROLE_ADMIN: ROLE_LEADER,
            ADD_PERSON, EDIT_PERSON, DELETE_PERSON,
            ADD_PARENT, EDIT_PARENT, DELETE_PARENT,
            ADD_CHILD, EDIT_CHILD, DELETE_CHILD,
            ADD_EVENT, EDIT_EVENT, DELETE_EVENT,
            ADD_APPLICATION, EDIT_APPLICATION, DELETE_APPLICATION
        ROLE_LEADER: ROLE_INSTRUCTOR,  
            VIEW_PERSON, 
            VIEW_PARENT, 
            VIEW_CHILD,
        ROLE_INSTRUCTOR: VIEW_OWN_APPLICATION, ADD_OWN_APPLICATION, EDIT_OWN_APPLICATION, DELETE_OWN_APPLICATION,
            VIEW_OWN_PERSON, EDIT_OWN_PERSON,
            VIEW_APPLICATION,
            VIEW_EVENT
        ROLE_PARENT: VIEW_OWN_CHILD, ADD_OWN_CHILD, EDIT_OWN_CHILD, DELETE_OWN_CHILD,
            VIEW_OWN_PERSON, EDIT_OWN_PERSON,
            VIEW_EVENT
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/tabornik, roles: [ROLE_LEADER, ROLE_INSTRUCTOR, ROLE_PARENT] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
